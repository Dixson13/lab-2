#include <iostream>      //заголовочный файл с классами, функциями и переменными для организации ввода-вывода в языке программирования C++.
#include <string>        //класс с методами и переменными для организации работы со строками в языке программирования C++.

using namespace std;     //пространство стандартных имён.

#include"book.h"         //класс с методами и переменными, который мы создали для работы с ним.

int main()
{
    setlocale(LC_ALL,"rus");    //функция для использования русских букв.
    int x, num;                 //объявление переменных.
    string s1, s2;
    Book p,p1,p2;
    while (1)                   //бесконечный цикл с предусловием.
    {
        cout<<"Введите число 1 для реализации метода setName, setAuthor, setCountPage.\n";
        cout<<"Введите число 2 для реализации методов getName, getAuthor, getCountPage.\n";
        cout<<"Введите число 3 для реализации метода print (вывод объекта на экран).\n";
        cout<<"Введите число 4 для демонстрации работы операторов ввода из потока (>>) и вывода в поток (<<) для двух объектов.\n";
        cout<<"Введите число 5 для демонстрации работы операторов сравнения (==, <, >, <=, >=, !=) для двух объектов введённых ранее (сравнение осуществляем только для третьего поля).\n";
        cout<<"Введите число 6 для демонстрации работы оператора присваивания (присваиваем первый объект второму)";
        cout<<"\nВведите 0 для выхода.\n";
        cin>>x;
        if (x>=0 && x<=6)
        {
            switch(x)           //оператор выбора.
            {
                case(0):
                    break;
                case(1):
                    cout<<"Введите Name\n";
                    cin>>s1;
                    p.setName(s1);                                            //осуществление метода setName для объекта p.
                    cout<<"Введите Author\n";
                    cin>>s2;
                    p.setAuthor(s2);                                          //осуществление метода setAuthor для объекта p.
                    cout<<"Введите countPage\n";
                    cin>>num;
                    p.setCountPage(num);                                      //осуществление метода setCountPage для объекта p.
                    break;
                case(2):
                    s1=p.getName();                                           //осуществление метода getName для объекта p.
                    s2=p.getAuthor();                                         //осуществление метода getAuthor для объекта p.
                    num=p.getCountPage();                                     //осуществление метода getCountPage для объекта p.
                    cout<<"Name: "<<s1<<"."<<endl;
                    cout<<"Author: "<<s2<<"."<<endl;
                    cout<<"CountPage: "<<num<<"."<<endl;
                    break;
                case(3):
                    p.print();                                                //осуществление метода print для объекта p.
                    break;
                case(4):
                    cin>>p1>>p2;                                              //демонстрация работы оператора ввода из потока (>>).
                    cout<<"Книга 1. "<<p1<<endl<<"Книга 2. "<<p2<<endl;       //демонстрация работы оператора вывода в поток (<<).
                    break;
                case(5):
                    cout<<"p1 == p2 - "<<(p1 == p2)<<endl;                    //демонстрация работы оператора равенства (==).
                    cout<<"p1 < p2 - "<<(p1 < p2)<<endl;                      //демонстрация работы оператора меньше (<).
                    cout<<"p1 > p2 - "<<(p1 > p2)<<endl;                      //демонстрация работы оператора больше (>).
                    cout<<"p1 <= p2 - "<<(p1 <= p2)<<endl;                    //демонстрация работы оператора меньше или равно (<=).
                    cout<<"p1 >= p2 - "<<(p1 >= p2)<<endl;                    //демонстрация работы оператора больше или равно (>=).
                    cout<<"p1 != p2 - "<<(p1 != p2)<<endl;                    //демонстрация работы оператора неравенства (!=).
                    break;
                case(6):
                    cout<<"p2 = p1"<<(p2 = p1)<<endl;                         //демонстрация работы оператора присваивания (=).
                    cout<<"Книга 1. "<<p1<<endl<<"Книга 2. "<<p2<<endl;
                    break;
                default:                                                      //оператор default выполняется, если ни одно из значений case константное выражение не равно значению switch (выражение).
                    break;                                                    //оператор break имеет два назначения: первое - это окончание работы оператора switch; второе - это принудительное окончание цикла.
            }
        }
        else
        {
            cout<<"Введите число от 0 до 6.\n";
        }
        cout<<endl;
        if (x==0)                                             //условие выхода из бесконечного цикла с предусловием.
            break;
    }
    return 0;                                                 //оператор немедленного выхода из функции (т.е. возвращает 0).
}
